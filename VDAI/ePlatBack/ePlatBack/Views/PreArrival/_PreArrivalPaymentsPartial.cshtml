@model ePlatBack.Models.ViewModels.PreArrivalPaymentsModel

@{
    var Privileges = Model.Privileges;
}
@if (Privileges.Count(m => m.Component == "Section_PaymentsInfo") > 0 && Privileges.FirstOrDefault(m => m.Component == "Section_PaymentsInfo").View)
{
    <section id="Section_PaymentsInfo" class="full-width editor-alignment fds-active" style="border-top:1px solid #dddddd;margin-top:20px;">
        <h3>Payments Information</h3>
        <div>
            <div class="left" style="width:150px;">
                Total:
                <span class="block secondary-selected-row-dependent" id="spanTotalOptionsSold" data-format="currency">
                </span>
                Payments:
                <span class="block secondary-selected-row-dependent" id="spanTotalOptionsPayments" data-format="currency">
                </span>
                Due:
                <span class="block secondary-selected-row-dependent" id="spanTotalOptionsDue" data-format="currency">
                </span>
            </div>
            <div class="right" style="text-align:right;width:150px">
                <span class="block">
                    <input type="button" id="btnNewPayment" class="submit clear-form" value="new payment" />
                </span>
                <span class="block">
                    <input type="button" id="btnNewRefund" class="submit-refund clear-form" value="new refund" style="margin-top:5px;" />
                </span>
                <span class="block">
                    <input type="button" id="btnApplyPendingCharges" class="button" value="apply charges" style="margin-top:5px;" />
                </span>
            </div>
        </div>
        <div class="align-from-top align-from-bottom full-width" style="margin-bottom:20px">
            <table id="tblPaymentsResults" class="dataTable table">
                <thead>
                    <tr>
                        <th>Transaction</th>
                        <th>Payment Type</th>
                        <th>Amount</th>
                        <th>Charge Type</th>
                        <th>Invoice</th>
                        <th>Comments</th>
                        <th>Date Saved</th>
                        <th>Status</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="secondary-selected-row-dependent"></tbody>
            </table>
        </div>

        @using (Ajax.BeginForm("SavePayment", "PreArrival", new AjaxOptions { OnSuccess = "PREARRIVAL.savePaymentSuccess(data)" }, new { id = "frmPaymentInfo" }))
        {
            @*<h3 class="refund-dependent" style="color:red;">Credit Card Refunds must be marked as Not made by ePlat and an Invoice number must be saved.</h3>*@
            <h3 class="refund-dependent" style="color:red; display:none;">Credit Card Refunds must be marked as "Not made by ePlat".</h3>
            <div class="editor-alignment" style="display:none">
                <div class="editor-label">
                    @Html.HiddenFor(model => model.PaymentInfo_PaymentDetailsID)
                    @Html.HiddenFor(model => model.PaymentInfo_ReservationID, new { data_keep_value = "", @class = "secondary-selected-row-dependent" })
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.PaymentInfo_TransactionType, Model.TransactionTypes, new { data_keep_value = "" })
                </div>
            </div>
            <div class="editor-alignment">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_PaymentType)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.PaymentInfo_PaymentType, Model.PaymentTypes)
                </div>
            </div>
            <div class="editor-alignment credit-card-dependent" style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_BillingInfo)
                </div>
                <div class="editor-field">
                    @*@Html.DropDownListFor(model => model.PaymentInfo_BillingInfo, new List<SelectListItem>() { new SelectListItem() { Value = "null", Text = "--Add Info--" } })*@
                    @Html.DropDownListFor(model => model.PaymentInfo_BillingInfo, Model.PaymentInfo_DrpBillingInfo)
                </div>
            </div>
            <div class="editor-alignment cc-reference-dependent" style="display:none;">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_CCReferenceNumber)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PaymentInfo_CCReferenceNumber)
                </div>
            </div>
            <div class="editor-alignment cc-reference-dependent" style="display:none;">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_CCType)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.PaymentInfo_CCType, Model.PaymentInfo_DrpCardTypes)
                </div>
            </div>
            <div class="editor-alignment refund-dependent" style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_RefundAccount)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PaymentInfo_RefundAccount)
                </div>
            </div>
            <div class="editor-alignment refund-dependent" style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_InvoiceToRefund)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.PaymentInfo_InvoiceToRefund, new List<SelectListItem>() { new SelectListItem() { Value = "null", Text = "" } })
                </div>
            </div>
            <div class="editor-alignment">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_ChargeType)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.PaymentInfo_ChargeType, Model.ChargeTypes)
                </div>
            </div>
            <div class="editor-alignment">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_ChargeDescription)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.PaymentInfo_ChargeDescription, Model.ChargeDescriptions)
                </div>
            </div>
            <div class="editor-alignment points-redemption-dependent" style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_Quantity)
                    @Html.HiddenFor(model => model.PaymentInfo_PointsRates, new { data_keep_value = "true" })
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PaymentInfo_Quantity, new { @class = "numeric-field" })
                </div>
            </div>
            <div class="editor-alignment">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_Amount)
                    <label id="lblReferralCredits" class="referrals-dependent"></label>
                    <label class="referrals-dependent">Referral Credits</label>
                    <i id="updateReferralCredits" class="material-icons referrals-dependent" style="float:right;">update</i>
                </div>
                <div class="editor-field">
                    <span class="refund-dependent" style="display:none">- </span>
                    @Html.TextBoxFor(model => model.PaymentInfo_Amount, new { @class = "numeric-field" })
                </div>
            </div>
            <div class="editor-alignment">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_Currency)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.PaymentInfo_Currency, Model.Currencies)
                </div>
            </div>
            <div class="editor-alignment credit-card-dependent" style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_MadeByEplat)
                </div>
                <div class="editor-field">
                    <label>Yes</label>
                    @Html.RadioButtonFor(model => model.PaymentInfo_MadeByEplat, true, new { data_keep_value = "" })
                    <label>No</label>
                    @Html.RadioButtonFor(model => model.PaymentInfo_MadeByEplat, false, new { data_keep_value = "" })
                </div>
            </div>
            <div class="editor-alignment credit-card-dependent" style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_Transaction)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PaymentInfo_Transaction)
                </div>
            </div>
            if (Privileges.FirstOrDefault(m => m.Component == "PaymentInfo_DateSaved") != null && Privileges.FirstOrDefault(m => m.Component == "PaymentInfo_DateSaved").View)
            {<div class="editor-alignment refund-dependent" style="display:none">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PaymentInfo_DateSaved)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.PaymentInfo_DateSaved)
                    </div>
                </div>
            }
            <div class="editor-alignment">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentInfo_PaymentComments)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.PaymentInfo_PaymentComments)
                </div>
            </div>
            <div class="editor-alignment align-from-top full-width">
                <div class="editor-field">
                    @*<input type="button" id="btnSendPurchaseConfirmation" class="button right marg-left" data-sysevent="1" value="send P. C." />*@
                    <input type="button" id="btnSavePayment" class="submit right" value="save" />
                </div>
            </div>
        }
    </section>
}