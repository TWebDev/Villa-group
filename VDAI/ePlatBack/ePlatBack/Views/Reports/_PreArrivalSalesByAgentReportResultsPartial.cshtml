@model ePlatBack.Models.ViewModels.PreArrivalReport

@if (Model.ListManifest != null && Model.ListManifest.Count() > 0)
{
    if (Model.ListManifest.FirstOrDefault().IsExternal)
    {
        var listsPerResort = Model.ListManifest.GroupBy(m => m.Resort);

        foreach (var i in listsPerResort)
        {
            var ls = i.GroupBy(m => m.LeadSourceID);
            var sum = Decimal.Round(i.Sum(m => (m.Paid ? decimal.Parse(m.SalesVolume) : 0)), 2);
            //var count = i.Count(m => (m.Options != "" && m.Paid == true));
            var count = i.Count(m => (m.Options != "" && m.Paid == true && decimal.Parse(m.SalesVolume) > 0));

            <table id="tblArrivalsResults" class="table dataTable exportable">
                <thead>
                    <tr>
                        <th colspan="9">@Html.DisplayFor(model => i.Key)</th>
                        <th>Sales: @Html.DisplayFor(model => count)</th>
                        <th data-format="currency">@Html.DisplayFor(model => sum)</th>
                    </tr>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Certificate Number</th>
                        <th>Assigned To User</th>
                        <th>Resort Confirmation</th>
                        <th>Arrival Date</th>
                        <th>Departure Date</th>
                        <th>Total Nights</th>
                        <th>Option Types</th>
                        <th>Options</th>
                        <th>Volume Sold</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var x in ls)
                    {
                        var summ = Decimal.Round(x.Sum(m => (m.Paid ? decimal.Parse(m.SalesVolume) : 0)), 2);
                        //var countt = x.Count(m => (m.Options != "" && m.Paid == true));
                        var countt = x.Count(m => (m.Options != "" && m.Paid == true && decimal.Parse(m.SalesVolume) > 0));
                        <tr style="font-weight:bold;text-align:center;">
                            <td colspan="9">@Html.DisplayFor(model => x.FirstOrDefault().LeadSource)</td>
                            <td>Sales: @Html.DisplayFor(model => countt)</td>
                            <td data-format="currency">@Html.DisplayFor(model => summ)</td>
                        </tr>
                        foreach (var a in x)
                        {
                            var _c = a.ReservationStatus == "Canceled" || a.LeadStatus == "Cancelled" ? "error" : "";
                            <tr class="@_c">
                                <td>
                                    @Html.DisplayFor(model => a.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.CertificateNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.AssignedToUser)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.ConfirmationNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.ArrivalDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.DepartureDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.NumberNights)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.OptionTypes)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.Options)
                                </td>
                                @*<td data-format="currency" class="@isPaid">*@
                                <td data-format="currency">
                                    @Html.DisplayFor(model => a.SalesVolume)
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
    }
    else
    {
        var listsPerUser = Model.ListManifest.GroupBy(m => m.AssignedToUserID);

        foreach (var i in listsPerUser)
        {
            var ls = i.GroupBy(m => m.LeadSourceID);
            var sum = Decimal.Round(i.Sum(m => (m.Paid ? decimal.Parse(m.SalesVolume) : 0)), 2);
            //var count = i.Count(m => (m.Options != "" && m.Paid == true));
            var count = i.Count(m => (m.Options != "" && m.Paid == true && decimal.Parse(m.SalesVolume) > 0));
            <table id="tblArrivalsResults" class="table dataTable exportable">
                <thead>
                    <tr>
                        <th colspan="9">@Html.DisplayFor(model => i.FirstOrDefault().AssignedToUser)</th>
                        <th>Sales: @Html.DisplayFor(model => count)</th>
                        <th data-format="currency">@Html.DisplayFor(model => sum)</th>
                    </tr>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Certificate Number</th>
                        <th>Resort</th>
                        <th>Resort Confirmation</th>
                        <th>Arrival Date</th>
                        <th>Departure Date</th>
                        <th>Total Nights</th>
                        <th>Option Types</th>
                        <th>Options</th>
                        <th>Volume Sold</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var x in ls)
                    {
                        //var isPaid = x.FirstOrDefault().Paid ? "" : "error";
                        var summ = Decimal.Round(x.Sum(m => (m.Paid ? decimal.Parse(m.SalesVolume) : 0)), 2);
                        //var countt = x.Count(m => (m.Options != "" && m.Paid == true));
                        var countt = x.Count(m => (m.Options != "" && m.Paid == true && decimal.Parse(m.SalesVolume) > 0));
                        <tr style="font-weight:bold;text-align:center;">
                            <td colspan="9">@Html.DisplayFor(model => x.FirstOrDefault().LeadSource)</td>
                            <td>Sales: @Html.DisplayFor(model => countt)</td>
                            <td data-format="currency">@Html.DisplayFor(model => summ)</td>
                        </tr>
                        foreach (var a in x)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(model => a.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.CertificateNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.Resort)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.ConfirmationNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.ArrivalDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.DepartureDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.NumberNights)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.OptionTypes)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => a.Options)
                                </td>
                                @*<td data-format="currency" class="@isPaid">*@
                                <td data-format="currency">
                                    @Html.DisplayFor(model => a.SalesVolume)
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

        }
    }
}
else
{
    <table id="tblArrivalsResults" class="table dataTable">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Certificate Number</th>
                <th>Assigned To User</th>
                <th>Resort Confirmation</th>
                <th>Arrival Date</th>
                <th>Departure Date</th>
                <th>Total Nights</th>
                <th>Option Types</th>
                <th>Options</th>
                <th>Volume Sold</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
}


@if (Model.ListManifest == null)
{
    var listsPerUser = Model.ListManifest.GroupBy(m => m.AssignedToUserID);

    foreach (var i in listsPerUser)
    {
        var ls = i.GroupBy(m => m.LeadSourceID);
        var sum = Decimal.Round(i.Sum(m => (m.Paid ? decimal.Parse(m.SalesVolume) : 0)), 2);
        var count = i.Count(m => (m.Options != "" && m.Paid == true));
        <table id="tblArrivalsResults" class="table dataTable exportable">
            <thead>
                <tr>
                    <th colspan="9">@Html.DisplayFor(model => i.FirstOrDefault().AssignedToUser)</th>
                    <th>Sales: @Html.DisplayFor(model => count)</th>
                    <th data-format="currency">@Html.DisplayFor(model => sum)</th>
                </tr>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Certificate Number</th>
                    <th>Resort</th>
                    <th>Resort Confirmation</th>
                    <th>Arrival Date</th>
                    <th>Departure Date</th>
                    <th>Total Nights</th>
                    <th>Option Types</th>
                    <th>Options</th>
                    <th>Volume Sold</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var x in ls)
                {
                    //var isPaid = x.FirstOrDefault().Paid ? "" : "error";
                    var summ = Decimal.Round(x.Sum(m => (m.Paid ? decimal.Parse(m.SalesVolume) : 0)), 2);
                    var countt = x.Count(m => (m.Options != "" && m.Paid == true));
                    <tr style="font-weight:bold;text-align:center;">
                        <td colspan="9">@Html.DisplayFor(model => x.FirstOrDefault().LeadSource)</td>
                        <td>Sales: @Html.DisplayFor(model => countt)</td>
                        <td data-format="currency">@Html.DisplayFor(model => summ)</td>
                    </tr>
                    foreach (var a in x)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => a.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.CertificateNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.Resort)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.ConfirmationNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.ArrivalDate)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.DepartureDate)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.NumberNights)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.OptionTypes)
                            </td>
                            <td>
                                @Html.DisplayFor(model => a.Options)
                            </td>
                            @*<td data-format="currency" class="@isPaid">*@
                            <td data-format="currency">
                                @Html.DisplayFor(model => a.SalesVolume)
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

    }
}

