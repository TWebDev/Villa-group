@model ePlatBack.Models.ViewModels.DestinationPackagesViewModel

@{
    ViewBag.Culture = Model.Culture;
    ViewBag.Title = Model.Seo_Title;
    ViewBag.Keywords = Model.Seo_Keywords;
    ViewBag.Description = Model.Seo_Description;
    ViewBag.Index = Model.Seo_Index;
    ViewBag.Follow = Model.Seo_Follow;
    
    ViewBag.Header = Model.Template_Header;
    ViewBag.Footer = Model.Template_Footer;
    ViewBag.Logo = Model.Template_Logo;
}

@section header{
    @Html.Raw(Model.Scripts_Header)
}

@section afterBody{
    @Html.Raw(Model.Scripts_AfterBody)
}

@section scripts{
    @Html.Raw(Model.Scripts_Footer)
    @Scripts.Render("~/bundles/dvh/slider")
    <script type="text/javascript">
        $(function () { 
            Slider.play(); 
        });
    </script>
}

@section controls{
    <div id="quoteRequest" style="display:none;">@Html.Partial("_QuoteRequestPartial", Model.QuoteRequestControl)</div>
}

@section featured {
    <div id="slidesGallery" class="slide-container">
        @if (Model.Pictures != null)
        {
            <div id="sliderPicturesContainer">
            @{
                int j = 0;
                foreach (var item in Model.Pictures)
                {
                    <img src="@item.Picture_Url" alt="@item.Picture_Alt" class="slide-picture" style="@(j==0 ? "display:inline-block;" : "display:none;")" />
                    j++;
                }
            }
            </div>
            <div class="slider-pager">
                <div id="pagerRow" class="slider-pager-row">
                @{
                    int i = 0;
                    
                foreach (var item in Model.Pictures)
                {
                    <div class="slide-button @(i==0 ? "slide-button-selected" : "")"  onclick="Slider.play(@i)" style="background-image:url(@item.Picture_Url?height=40)"></div>
                    i++;
                }
                }
                </div>
            </div>
            <div id="sliderOverlay" class="slider-info @Model.Destination.ToLower().Replace(" ","-")">
                <h2 id="slidesGalleryTitle">@Html.DisplayFor(model => model.Destination)</h2>
                <div id="slidesGalleryCaption"></div>
                @if(Model.VideoUrl != null){
                    <div class="slider-video">
                    <div id="player"></div>
                        <script>
                            // 2. This code loads the IFrame Player API code asynchronously.
                            var tag = document.createElement('script');
                            tag.src = "http://www.youtube.com/player_api";
                            var firstScriptTag = document.getElementsByTagName('script')[0];
                            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                            // 3. This function creates an <iframe> (and YouTube player)
                            //    after the API code downloads.
                            var player;
                            function onYouTubePlayerAPIReady() {
                                player = new YT.Player('player', {
                                    playerVars: { 'rel': 0, 'autoplay': 1, 'showinfo': 0, 'autohide': 1, 'wmode': 'opaque' },
                                    height: '169',
                                    width: '300',
                                    videoId: '@Model.VideoUrl',
                                    events: {
                                        'onReady': onPlayerReady
                                    }
                                });
                            }

                            // 4. The API will call this function when the video player is ready.
                            function onPlayerReady(event) {
                                event.target.mute();
                            }
                    </script>
                    </div>
                    <div id="sliderVideotitle">@Html.DisplayFor(model => model.VideoTitle)</div>
                }
            </div>
        }
    </div>
}

<div class="left-column">
    <h1>@Html.DisplayFor(model => model.PageTitle)</h1><br />
    @if (Model.Packages != null)
    {
        foreach (var item in Model.Packages)
        {
        <figure class="tile-package">
            <a href="@item.Url" title="@item.Package">
                <div class="tile-button">MORE DETAILS</div>
                <img class="tile-image" src="@item.PictureUrl?width=320" width="320" height="147" alt="@item.Package" />
            </a>
            <figcaption class="tile-text">
                <a href="@item.Url" title="@item.Package">
                <h2>@Html.DisplayFor(modelItem => item.Package)</h2>
                <span class="price">
                    $@Html.DisplayFor(modelItem => item.Price)

                </span>
                    @Html.DisplayFor(modelItem => item.Stay)<br />@ePlatFront.Resources.Views.Shared.SharedStrings._for @Html.DisplayFor(modelItem => item.Guests)
                </a>
            </figcaption>
        </figure>
        }
    }
    <div id="destinationDescription">
        <h2>@Html.DisplayFor(modelItem => modelItem.Destination)</h2><br />
        @Html.Raw(Model.Content)
    </div>
</div>
<div class="right-column">
    <div class="call-us">
        <span class="action">@ePlatFront.Resources.Views.Packages.PackagesStrings.Call_Now!</span><br />
        <strong>@ePlatFront.Resources.Views.Packages.PackagesStrings.Book_Today</strong><br />
        @ePlatFront.Resources.Views.Packages.PackagesStrings.Decide_travel_dates_later
        <span class="phone-number phone-desktop">@Model.Template_Phone_Desktop</span>
        <span class="phone-number phone-mobile">@Model.Template_Phone_Mobile</span>
    </div>
    <div class="call-to-action">How can we offer<br />such amazing prices?</div>
    <div class="right-panel">
            <img src="/images/ab-seal-horizontal-large.jpg?w=200" alt="Better Business Bureau" style="border:none;" />
    </div>
    @Html.Partial("_FreeVacationPartial", Model.FreeVacationControl)
<div id="redeemMyPackage" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="redeemMyPackageLabel">@Html.Partial("_RedeemMyPackage", Model.RedeemMyPackageControl)</div>
</div>